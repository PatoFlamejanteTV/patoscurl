"use strict";const express=require("express"),fs=require("fs"),os=require("os"),dns=require("dns"),app=express(),PORT=process.env.PORT||3e3;function detectCurl(e,s,o){const t=e.headers["user-agent"]||"";e.isCurl=t.toLowerCase().includes("curl"),o()}app.use(detectCurl),app.get("/",((e,s)=>{const o=e.socket.remoteAddress;console.log("/ "+e.socket.remoteAddress+". isCURL? "+e.isCurl),e.isCurl?fs.readFile("indexcurl.txt","utf8",((e,t)=>{if(e)console.error(e),s.status(500).send("Error reading indexcurl.txt");else{const e=`\n\n\nServer Info:\nIP Address: ${o}\n`;s.type("text/plain"),s.send(`${e}\n${t}`)}})):fs.readFile("indexbrowser.html","utf8",((e,o)=>{e?(console.error(e),s.status(500).send("Error reading indexbrowser.html")):(s.type("text/html"),s.send(o))}))})),app.get("/:subpage",((e,s)=>{console.log("/${subpage}"+e.socket.remoteAddress+". isCURL? "+e.isCurl);const o=`./${e.params.subpage}.txt`;fs.readFile(o,"utf8",((o,t)=>{o?(console.error(o),s.status(404).send("Subpage not found")):e.isCurl?(s.type("text/plain"),s.status(200).send("Subpage found"),s.send(t)):(s.type("text/html"),s.status(405).send("Please use CURL next time"),s.send(t))}))})),app.get("/TEST/debug",((e,s)=>{console.log("/TEST/debug "+e.socket.remoteAddress+". isCURL? "+e.isCurl);const o=e.socket.remoteAddress,t=e.headers["user-agent"]||"",r=os.hostname(),n=os.platform(),d=os.arch(),l=os.totalmem()/1048576,u=os.freemem()/1048576,a=os.cpus().length,p=os.cpus();let i="";p.forEach(((e,s)=>{i+=`CPU ${s+1}:\n`,i+=`  Model: ${e.model}\n`,i+=`  Speed: ${e.speed} GHz\n`,i+="\n"}));const c=os.uptime(),m=os.userInfo();dns.lookup(r,((e,p)=>{e&&(console.error(e),p="N/A");const $=`\nDebug Information\nClient IP Address: ${o}\nUser Agent: ${t}\nServer Hostname: ${r}\nServer Platform: ${n}\nServer Architecture: ${d}\nTotal Memory: ${l.toFixed(2)} MB\nFree Memory: ${u.toFixed(2)} MB\nCPU Cores: ${a}\nUptime: ${Math.floor(c/60/60)} hours, ${Math.floor(c%3600/60)} minutes\nDNS Lookup (IP): ${p}\nCPU Info (Advanced): ${i}\nUser Info (Advanced): ${m}\n        `;s.type("text/html"),s.send($)}))})),app.get("/TEST/mem",((e,s)=>{console.log("/TEST/mem "+e.socket.remoteAddress+". isCURL? "+e.isCurl);const o=os.totalmem()/1048576,t=os.freemem()/1048576,r=os.cpus().length,n=os.uptime();s.type("text/plain"),s.send(`\n            Total Memory: ${o} MB\n            Free Memory: ${t} MB\n            CPU Cores: ${r} cores\n            Uptime: ${n}`)})),app.listen(PORT,(()=>{console.log(`Server is running on http://localhost:${PORT}`)}));